// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.mycompany.school.web;

import com.mycompany.school.domain.AbstractPerson;
import com.mycompany.school.domain.AttendenceSheet;
import com.mycompany.school.domain.ClassSection;
import com.mycompany.school.domain.Designation;
import com.mycompany.school.domain.Event;
import com.mycompany.school.domain.EventCategory;
import com.mycompany.school.domain.EventType;
import com.mycompany.school.domain.LeaveType;
import com.mycompany.school.domain.PersonRole;
import com.mycompany.school.domain.Staff;
import com.mycompany.school.domain.StaffLeave;
import com.mycompany.school.domain.Student;
import com.mycompany.school.domain.StudentClass;
import com.mycompany.school.domain.StudentLeave;
import com.mycompany.school.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Long, AbstractPerson> ApplicationConversionServiceFactoryBean.getIdToAbstractPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.AbstractPerson>() {
            public com.mycompany.school.domain.AbstractPerson convert(java.lang.Long id) {
                return AbstractPerson.findAbstractPerson(id);
            }
        };
    }
    
    public Converter<String, AbstractPerson> ApplicationConversionServiceFactoryBean.getStringToAbstractPersonConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.AbstractPerson>() {
            public com.mycompany.school.domain.AbstractPerson convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AbstractPerson.class);
            }
        };
    }
    
    public Converter<AttendenceSheet, String> ApplicationConversionServiceFactoryBean.getAttendenceSheetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.AttendenceSheet, java.lang.String>() {
            public String convert(AttendenceSheet attendenceSheet) {
                return new StringBuilder().append(attendenceSheet.getAttendenceDate()).append(' ').append(attendenceSheet.getAttendenceList()).toString();
            }
        };
    }
    
    public Converter<Long, AttendenceSheet> ApplicationConversionServiceFactoryBean.getIdToAttendenceSheetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.AttendenceSheet>() {
            public com.mycompany.school.domain.AttendenceSheet convert(java.lang.Long id) {
                return AttendenceSheet.findAttendenceSheet(id);
            }
        };
    }
    
    public Converter<String, AttendenceSheet> ApplicationConversionServiceFactoryBean.getStringToAttendenceSheetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.AttendenceSheet>() {
            public com.mycompany.school.domain.AttendenceSheet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), AttendenceSheet.class);
            }
        };
    }
    
    public Converter<ClassSection, String> ApplicationConversionServiceFactoryBean.getClassSectionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.ClassSection, java.lang.String>() {
            public String convert(ClassSection classSection) {
                return new StringBuilder().append(classSection.getName()).toString();
            }
        };
    }
    
    public Converter<Long, ClassSection> ApplicationConversionServiceFactoryBean.getIdToClassSectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.ClassSection>() {
            public com.mycompany.school.domain.ClassSection convert(java.lang.Long id) {
                return ClassSection.findClassSection(id);
            }
        };
    }
    
    public Converter<String, ClassSection> ApplicationConversionServiceFactoryBean.getStringToClassSectionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.ClassSection>() {
            public com.mycompany.school.domain.ClassSection convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), ClassSection.class);
            }
        };
    }
    
    public Converter<Designation, String> ApplicationConversionServiceFactoryBean.getDesignationToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.Designation, java.lang.String>() {
            public String convert(Designation designation) {
                return new StringBuilder().append(designation.getName()).toString();
            }
        };
    }
    
    public Converter<Long, Designation> ApplicationConversionServiceFactoryBean.getIdToDesignationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.Designation>() {
            public com.mycompany.school.domain.Designation convert(java.lang.Long id) {
                return Designation.findDesignation(id);
            }
        };
    }
    
    public Converter<String, Designation> ApplicationConversionServiceFactoryBean.getStringToDesignationConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.Designation>() {
            public com.mycompany.school.domain.Designation convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Designation.class);
            }
        };
    }
    
    public Converter<Event, String> ApplicationConversionServiceFactoryBean.getEventToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.Event, java.lang.String>() {
            public String convert(Event event) {
                return new StringBuilder().append(event.getDescription()).append(' ').append(event.getEventDate()).toString();
            }
        };
    }
    
    public Converter<Long, Event> ApplicationConversionServiceFactoryBean.getIdToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.Event>() {
            public com.mycompany.school.domain.Event convert(java.lang.Long id) {
                return Event.findEvent(id);
            }
        };
    }
    
    public Converter<String, Event> ApplicationConversionServiceFactoryBean.getStringToEventConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.Event>() {
            public com.mycompany.school.domain.Event convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Event.class);
            }
        };
    }
    
    public Converter<EventCategory, String> ApplicationConversionServiceFactoryBean.getEventCategoryToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.EventCategory, java.lang.String>() {
            public String convert(EventCategory eventCategory) {
                return new StringBuilder().append(eventCategory.getName()).toString();
            }
        };
    }
    
    public Converter<Long, EventCategory> ApplicationConversionServiceFactoryBean.getIdToEventCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.EventCategory>() {
            public com.mycompany.school.domain.EventCategory convert(java.lang.Long id) {
                return EventCategory.findEventCategory(id);
            }
        };
    }
    
    public Converter<String, EventCategory> ApplicationConversionServiceFactoryBean.getStringToEventCategoryConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.EventCategory>() {
            public com.mycompany.school.domain.EventCategory convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), EventCategory.class);
            }
        };
    }
    
    public Converter<EventType, String> ApplicationConversionServiceFactoryBean.getEventTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.EventType, java.lang.String>() {
            public String convert(EventType eventType) {
                return new StringBuilder().append(eventType.getName()).toString();
            }
        };
    }
    
    public Converter<Long, EventType> ApplicationConversionServiceFactoryBean.getIdToEventTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.EventType>() {
            public com.mycompany.school.domain.EventType convert(java.lang.Long id) {
                return EventType.findEventType(id);
            }
        };
    }
    
    public Converter<String, EventType> ApplicationConversionServiceFactoryBean.getStringToEventTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.EventType>() {
            public com.mycompany.school.domain.EventType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), EventType.class);
            }
        };
    }
    
    public Converter<LeaveType, String> ApplicationConversionServiceFactoryBean.getLeaveTypeToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.LeaveType, java.lang.String>() {
            public String convert(LeaveType leaveType) {
                return new StringBuilder().append(leaveType.getName()).toString();
            }
        };
    }
    
    public Converter<Long, LeaveType> ApplicationConversionServiceFactoryBean.getIdToLeaveTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.LeaveType>() {
            public com.mycompany.school.domain.LeaveType convert(java.lang.Long id) {
                return LeaveType.findLeaveType(id);
            }
        };
    }
    
    public Converter<String, LeaveType> ApplicationConversionServiceFactoryBean.getStringToLeaveTypeConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.LeaveType>() {
            public com.mycompany.school.domain.LeaveType convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), LeaveType.class);
            }
        };
    }
    
    public Converter<PersonRole, String> ApplicationConversionServiceFactoryBean.getPersonRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.PersonRole, java.lang.String>() {
            public String convert(PersonRole personRole) {
                return new StringBuilder().append(personRole.getRoleName()).toString();
            }
        };
    }
    
    public Converter<Long, PersonRole> ApplicationConversionServiceFactoryBean.getIdToPersonRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.PersonRole>() {
            public com.mycompany.school.domain.PersonRole convert(java.lang.Long id) {
                return PersonRole.findPersonRole(id);
            }
        };
    }
    
    public Converter<String, PersonRole> ApplicationConversionServiceFactoryBean.getStringToPersonRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.PersonRole>() {
            public com.mycompany.school.domain.PersonRole convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), PersonRole.class);
            }
        };
    }
    
    public Converter<Long, Staff> ApplicationConversionServiceFactoryBean.getIdToStaffConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.Staff>() {
            public com.mycompany.school.domain.Staff convert(java.lang.Long id) {
                return Staff.findStaff(id);
            }
        };
    }
    
    public Converter<String, Staff> ApplicationConversionServiceFactoryBean.getStringToStaffConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.Staff>() {
            public com.mycompany.school.domain.Staff convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Staff.class);
            }
        };
    }
    
    public Converter<StaffLeave, String> ApplicationConversionServiceFactoryBean.getStaffLeaveToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.StaffLeave, java.lang.String>() {
            public String convert(StaffLeave staffLeave) {
                return new StringBuilder().append(staffLeave.getLeaveFrom()).append(' ').append(staffLeave.getLeaveTo()).append(' ').append(staffLeave.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, StaffLeave> ApplicationConversionServiceFactoryBean.getIdToStaffLeaveConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.StaffLeave>() {
            public com.mycompany.school.domain.StaffLeave convert(java.lang.Long id) {
                return StaffLeave.findStaffLeave(id);
            }
        };
    }
    
    public Converter<String, StaffLeave> ApplicationConversionServiceFactoryBean.getStringToStaffLeaveConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.StaffLeave>() {
            public com.mycompany.school.domain.StaffLeave convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), StaffLeave.class);
            }
        };
    }
    
    public Converter<Long, Student> ApplicationConversionServiceFactoryBean.getIdToStudentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.Student>() {
            public com.mycompany.school.domain.Student convert(java.lang.Long id) {
                return Student.findStudent(id);
            }
        };
    }
    
    public Converter<String, Student> ApplicationConversionServiceFactoryBean.getStringToStudentConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.Student>() {
            public com.mycompany.school.domain.Student convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Student.class);
            }
        };
    }
    
    public Converter<StudentClass, String> ApplicationConversionServiceFactoryBean.getStudentClassToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.StudentClass, java.lang.String>() {
            public String convert(StudentClass studentClass) {
                return new StringBuilder().append(studentClass.getName()).toString();
            }
        };
    }
    
    public Converter<Long, StudentClass> ApplicationConversionServiceFactoryBean.getIdToStudentClassConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.StudentClass>() {
            public com.mycompany.school.domain.StudentClass convert(java.lang.Long id) {
                return StudentClass.findStudentClass(id);
            }
        };
    }
    
    public Converter<String, StudentClass> ApplicationConversionServiceFactoryBean.getStringToStudentClassConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.StudentClass>() {
            public com.mycompany.school.domain.StudentClass convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), StudentClass.class);
            }
        };
    }
    
    public Converter<StudentLeave, String> ApplicationConversionServiceFactoryBean.getStudentLeaveToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.mycompany.school.domain.StudentLeave, java.lang.String>() {
            public String convert(StudentLeave studentLeave) {
                return new StringBuilder().append(studentLeave.getLeaveFrom()).append(' ').append(studentLeave.getLeaveTo()).append(' ').append(studentLeave.getDescription()).toString();
            }
        };
    }
    
    public Converter<Long, StudentLeave> ApplicationConversionServiceFactoryBean.getIdToStudentLeaveConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.mycompany.school.domain.StudentLeave>() {
            public com.mycompany.school.domain.StudentLeave convert(java.lang.Long id) {
                return StudentLeave.findStudentLeave(id);
            }
        };
    }
    
    public Converter<String, StudentLeave> ApplicationConversionServiceFactoryBean.getStringToStudentLeaveConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.mycompany.school.domain.StudentLeave>() {
            public com.mycompany.school.domain.StudentLeave convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), StudentLeave.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAbstractPersonToStringConverter());
        registry.addConverter(getIdToAbstractPersonConverter());
        registry.addConverter(getStringToAbstractPersonConverter());
        registry.addConverter(getAttendenceSheetToStringConverter());
        registry.addConverter(getIdToAttendenceSheetConverter());
        registry.addConverter(getStringToAttendenceSheetConverter());
        registry.addConverter(getClassSectionToStringConverter());
        registry.addConverter(getIdToClassSectionConverter());
        registry.addConverter(getStringToClassSectionConverter());
        registry.addConverter(getDesignationToStringConverter());
        registry.addConverter(getIdToDesignationConverter());
        registry.addConverter(getStringToDesignationConverter());
        registry.addConverter(getEventToStringConverter());
        registry.addConverter(getIdToEventConverter());
        registry.addConverter(getStringToEventConverter());
        registry.addConverter(getEventCategoryToStringConverter());
        registry.addConverter(getIdToEventCategoryConverter());
        registry.addConverter(getStringToEventCategoryConverter());
        registry.addConverter(getEventTypeToStringConverter());
        registry.addConverter(getIdToEventTypeConverter());
        registry.addConverter(getStringToEventTypeConverter());
        registry.addConverter(getLeaveTypeToStringConverter());
        registry.addConverter(getIdToLeaveTypeConverter());
        registry.addConverter(getStringToLeaveTypeConverter());
        registry.addConverter(getPersonRoleToStringConverter());
        registry.addConverter(getIdToPersonRoleConverter());
        registry.addConverter(getStringToPersonRoleConverter());
        registry.addConverter(getStaffToStringConverter());
        registry.addConverter(getIdToStaffConverter());
        registry.addConverter(getStringToStaffConverter());
        registry.addConverter(getStaffLeaveToStringConverter());
        registry.addConverter(getIdToStaffLeaveConverter());
        registry.addConverter(getStringToStaffLeaveConverter());
        registry.addConverter(getStudentToStringConverter());
        registry.addConverter(getIdToStudentConverter());
        registry.addConverter(getStringToStudentConverter());
        registry.addConverter(getStudentClassToStringConverter());
        registry.addConverter(getIdToStudentClassConverter());
        registry.addConverter(getStringToStudentClassConverter());
        registry.addConverter(getStudentLeaveToStringConverter());
        registry.addConverter(getIdToStudentLeaveConverter());
        registry.addConverter(getStringToStudentLeaveConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
